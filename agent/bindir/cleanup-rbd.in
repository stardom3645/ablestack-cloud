#!/usr/bin/env bash
set -euo pipefail

# ┌──────────────────────────────────────────────────────────────┐
# │   KVM 호스트에서 미사용 RBD 이미지 3회 체크 후 안전하게 unmap  │
# └──────────────────────────────────────────────────────────────┘

echo "=== 호스트: $(hostname) | RBD 매핑 정리 ==="
echo

declare -A unused_count

# 1) 현재 매핑된 pool/image 목록 수집
get_mapped_images() {
  rbd showmapped | awk 'NR>1 {print $2 "/" $3}'
}

# 2) 현재 실행 중인 VM에서 사용하는 RBD 이미지(pool/image) 목록 수집
get_used_images() {
  local result=()
  while read -r vm; do
    [ -z "$vm" ] && continue

    # dumpxml 실패시에도 스크립트 멈추지 않도록 || true
    xml=$(virsh dumpxml "$vm" 2>/dev/null || true)

    if [ -n "$xml" ]; then
      while read -r img; do
        result+=("$img")
      done < <(echo "$xml" \
        | grep "<source .*dev='/dev/rbd/" \
        | sed -n "s|.*dev='/dev/rbd/\([^/]\+\)/\([^']\+\)'.*|\1/\2|p")
    fi
  done < <(virsh list --state-running --name || true)

  printf '%s\n' "${result[@]}" | sort -u
}

# 3) 3회 체크 (30초 간격)
for i in {1..3}; do
  echo "--- 체크 $i ---"

  map_images=($(get_mapped_images))
  used_images=($(get_used_images))

  echo "[디버그] 매핑된 이미지: ${#map_images[@]}개, 사용 중인 이미지: ${#used_images[@]}개"
  # 이번 라운드에서 새로 미사용으로 판정된 이미지가 있는지 플래그
  has_unused=false

  for pool_image in "${map_images[@]:-}"; do
    if ! printf '%s\n' "${used_images[@]:-}" | grep -Fxq "$pool_image"; then
      unused_count["$pool_image"]=$(( ${unused_count["$pool_image"]:-0} + 1 ))
      echo "[$i] 미 사용: $pool_image (Count=${unused_count[$pool_image]})"
      has_unused=true
    else
      echo "[$i] 사용 중:   $pool_image"
    fi
  done

  # 새로 미사용 이미지가 없으면 반복 종료
  if [ "$i" -lt 3 ] && ! $has_unused; then
    echo "새로 미사용된 이미지가 없어 추가 체크를 종료합니다."
    exit 0
  fi

  if [ "$i" -lt 3 ]; then
    echo "다음 체크까지 30초 대기..."
    sleep 30
  fi
done

# 4) 3회 모두 미사용된 이미지에 대해 unmap 수행
echo "=== 미사용으로 확정된 RBD 이미지 언맵 ==="

for pool_image in "${!unused_count[@]}"; do
  if [ "${unused_count[$pool_image]}" -eq 3 ]; then
    dev=$(rbd showmapped | awk -v img="$pool_image" '$2"/"$3 == img {print $5}')
    if [ -n "$dev" ]; then
      echo "언맵 중: $pool_image ($dev)"
      if rbd unmap "$dev"; then
        echo "   # 성공: $pool_image"
      else
        echo "   # 실패: $pool_image"
      fi
    else
      echo "   # 경고: $pool_image 에 해당하는 디바이스를 찾을 수 없습니다"
    fi
  else
    echo "건너뜀: $pool_image (미사용 횟수=${unused_count[$pool_image]})"
  fi
done
exit 0